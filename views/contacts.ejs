<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contacts</title>
    <link rel="stylesheet" href="/styles.css">
    <script src="/scripts.js" defer></script>
    <style>
        /* General Styles */
        /* General Styles */
body {
    font-family: 'Arial', sans-serif;
    color: #333;
    background-color: #eaeaea; /* Light gray for a softer background */
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.header {
    background: linear-gradient(135deg, #1d72b8, #007bff); /* Gradient blue */
    color: #fff;
    padding: 20px;
    text-align: center;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.header-title {
    margin: 0;
    font-size: 2.5rem;
    font-weight: 700;
}

.main-content {
    flex: 1;
    padding: 20px;
    max-width: 1200px;
    margin: 20px auto;
    background: #fff;
    border-radius: 15px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
}

.search-section {
    margin-bottom: 30px;
}

.search-form {
    display: flex;
    justify-content: center;
    gap: 15px;
}

.search-input {
    width: 100%;
    max-width: 600px;
    padding: 15px;
    border: 2px solid #1d72b8;
    border-radius: 30px;
    font-size: 1rem;
    transition: border-color 0.3s, box-shadow 0.3s;
    outline: none;
}

.search-input:focus {
    border-color: #0056b3;
    box-shadow: 0 0 10px rgba(0, 112, 255, 0.3);
}

.search-button {
    padding: 15px 30px;
    border: none;
    border-radius: 30px;
    background: #28a745;
    color: #fff;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
}

.search-button:hover {
    background: #218838;
    transform: scale(1.05);
}

.contacts-section, .my-contacts-section {
    margin-bottom: 30px;
}

.section-title {
    font-size: 2.2rem;
    margin-bottom: 20px;
    color: #1d72b8; /* Consistent blue */
    font-weight: 700;
    border-bottom: 3px solid #1d72b8;
    padding-bottom: 12px;
}

.contacts-list, .my-contacts-list {
    list-style: none;
    padding: 0;
}

.contact-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    background: #ffffff;
    border-radius: 15px;
    margin-bottom: 20px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    transition: box-shadow 0.3s, transform 0.3s;
}

.contact-item:hover {
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.25);
    transform: translateY(-5px); /* More pronounced lift effect */
}

.profile-pic {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin-right: 20px;
    object-fit: cover;
    border: 3px solid #1d72b8; /* Blue border */
}

.username {
    flex-grow: 1;
    font-size: 1.3rem; /* Slightly larger */
    font-weight: 600;
}

.button-group {
    display: flex;
    gap: 10px;
}

.add-contact, .remove-contact, .info-button {
    border: none;
    padding: 12px 24px;
    border-radius: 30px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.3s;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.add-contact {
    background: #17a2b8;
    color: #fff;
}

.add-contact:hover {
    background: #138496;
    transform: scale(1.05);
}

.remove-contact {
    background: #dc3545;
    color: #fff;
}

.remove-contact:hover {
    background: #c82333;
    transform: scale(1.05);
}

.info-button {
    background: #6c757d;
    color: #fff;
}

.info-button:hover {
    background: #5a6268;
    transform: scale(1.05);
}

.no-users, .no-contacts {
    text-align: center;
    font-size: 1.2rem;
    color: #666;
}

.footer {
    background: linear-gradient(135deg, #1d72b8, #007bff); /* Gradient blue */
    color: #fff;
    text-align: center;
    padding: 15px;
    position: relative;
    bottom: 0;
    width: 100%;
    box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.2);
    margin-top: 30px;
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5); /* Darker background */
    padding-top: 60px;
}

.modal-content {
    background-color: #ffffff;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #ddd;
    width: 80%;
    max-width: 500px;
    border-radius: 15px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
}

.close {
    color: #333;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover,
.close:focus {
    color: #1d72b8; /* Consistent blue */
    text-decoration: none;
}

        /* Modal Styles */
        .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
            padding-top: 60px;
        }

        .modal-content {
            background-color: #ffffff;
            margin: 5% auto; /* Centered */
            padding: 20px;
            border: 1px solid #ddd;
            width: 80%; /* Could be more or less, depending on screen size */
            max-width: 500px;
            border-radius: 12px;
            box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);
        }

        .close {
            color: #333;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover,
        .close:focus {
            color: #007bff;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <header class="header">
        <h1 class="header-title">Contacts</h1>
    </header>

    <main class="main-content">
        <section class="search-section">
            <form id="searchForm" class="search-form" action="/contacts/search" method="GET">
                <input type="text" id="searchInput" name="query" class="search-input" placeholder="Search users..." autocomplete="off" required>
                <button type="submit" class="search-button">Search</button>
            </form>
        </section>

        <!-- All Users Section -->
        <section class="contacts-section">
            <h2 class="section-title">All Users</h2>
            <ul id="contactsList" class="contacts-list">
                <% if (users && users.length > 0) { %>
                    <% users.forEach(function(user) { %>
                        <li class="contact-item">
                            <a href="/user/chat1/<%= user.roomId %>?user1Email=<%= user.email %>&user1Name=<%= user.name %>&user2Email=<%= currentUser.email %>&user2Name=<%= currentUser.name %>" style="text-decoration: none; color: inherit;">
                                <img src="<%= user.profilePicture || '/default-profile.png' %>" alt="<%= user.name %> Profile Picture" class="profile-pic">
                                <span class="username"><%= user.name %></span>
                            </a>
                            <div class="button-group">
                                <button class="add-contact" data-user-email="<%= user.email %>">Add Contact</button>
                                <button class="info-button" data-user-name="<%= user.name %>" data-user-email="<%= user.email %>">Info</button>
                            </div>
                        </li>
                    <% }) %>
                <% } else { %>
                    <p class="no-users">No users found.</p>
                <% } %>
            </ul>
        </section>

        <!-- My Contacts Section -->
        <section class="my-contacts-section">
            <h2 class="section-title">My Contacts</h2>
            <ul id="myContactsList" class="my-contacts-list">
                <% if (contactList && contactList.length > 0) { %>
                    <% contactList.forEach(function(contact) { %>
                        <li class="contact-item">
                            <a href="/user/chat1/<%= contact.roomId %>?user1Email=<%= contact.contactEmail %>&user1Name=<%= contact.contactName %>&user2Email=<%= currentUser.email %>&user2Name=<%= currentUser.name %>" style="text-decoration: none; color: inherit;">
                                <img src="<%= contact.profilePicture || '/default-profile.png' %>" alt="<%= contact.contactName %> Profile Picture" class="profile-pic">
                                <span class="username"><%= contact.contactName %></span>
                            </a>
                            <div class="button-group">
                                <button class="remove-contact" data-contact-email="<%= contact.contactEmail %>" data-contact-name="<%= contact.contactName %>">Delete</button>
                                <button class="info-button" data-user-name="<%= contact.contactName %>" data-user-email="<%= contact.contactEmail %>">Info</button>
                            </div>
                        </li>
                    <% }) %>
                <% } else { %>
                    <p class="no-contacts">No contacts found.</p>
                <% } %>
            </ul>
        </section>

        <!-- Modal HTML -->
        <div id="infoModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h2>User Information</h2>
                <p id="modalUserName"></p>
                <p id="modalUserEmail"></p>
            </div>
        </div>

    </main>

    <footer class="footer">
        <p>&copy; 2024 Your Chat App</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const contactsList = document.getElementById('contactsList');
            const myContactsList = document.getElementById('myContactsList');
            const infoModal = document.getElementById('infoModal');
            const modalUserName = document.getElementById('modalUserName');
            const modalUserEmail = document.getElementById('modalUserEmail');
            const closeModal = infoModal.querySelector('.close');

            // Function to handle Info button click
            function handleInfoButtonClick(event) {
                const button = event.target;
                const userName = button.getAttribute('data-user-name');
                const userEmail = button.getAttribute('data-user-email');

                modalUserName.textContent = `Name: ${userName}`;
                modalUserEmail.textContent = `Email: ${userEmail}`;

                infoModal.style.display = "block";
            }

            // Attach event listeners to Info buttons
            function attachInfoButtonListeners(container) {
                container.querySelectorAll('.info-button').forEach(button => {
                    button.addEventListener('click', handleInfoButtonClick);
                });
            }

            // Attach listeners to existing Info buttons
            attachInfoButtonListeners(contactsList);
            attachInfoButtonListeners(myContactsList);

            // Update Info buttons in dynamically added content
            const searchForm = document.getElementById('searchForm');
            const searchInput = document.getElementById('searchInput');
            searchForm.addEventListener('submit', async function(event) {
                event.preventDefault(); // Prevent default form submission

                const query = searchInput.value;

                try {
                    const response = await fetch(`/user/contacts/search?query=${encodeURIComponent(query)}`);
                    const data = await response.json();

                    // Update the contacts list with the search results
                    contactsList.innerHTML = data.users.map(user => `
                        <li class="contact-item">
                            <img src="${user.profilePicture || '/default-profile.png'}" alt="${user.name} Profile Picture" class="profile-pic">
                            <span class="username">${user.name}</span>
                            <button class="add-contact" data-user-email="${user.email}">Add Contact</button>
                            <button class="info-button" data-user-name="${user.name}" data-user-email="${user.email}">Info</button>
                        </li>
                    `).join('');

                    // Reattach event listeners to dynamically added Info buttons
                    attachInfoButtonListeners(contactsList);
                } catch (error) {
                    console.error('Error searching for users:', error);
                    alert('Failed to search users.');
                }
            });

            // Handle add and remove contact actions
            document.querySelectorAll('.add-contact').forEach(button => {
                button.addEventListener('click', async function() {
                    const contactEmail = this.getAttribute('data-user-email');

                    try {
                        const response = await fetch('/user/contacts/add', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ contactEmail })
                        });

                        const result = await response.json();
                        if (response.ok) {
                            alert(result.message);
                            window.location.reload();
                        } else {
                            alert(result.message);
                        }
                    } catch (error) {
                        console.error('Error adding contact:', error);
                        alert('Failed to add contact.');
                    }
                });
            });

            document.querySelectorAll('.remove-contact').forEach(button => {
                button.addEventListener('click', async function() {
                    const contactEmail = this.getAttribute('data-contact-email');

                    try {
                        const response = await fetch('/user/contacts/remove', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ contactEmail })
                        });

                        const result = await response.json();
                        if (response.ok) {
                            alert(result.message);
                            window.location.reload();
                        } else {
                            alert(result.message);
                        }
                    } catch (error) {
                        console.error('Error removing contact:', error);
                        alert('Failed to remove contact.');
                    }
                });
            });

            // Handle close modal
            closeModal.addEventListener('click', function() {
                infoModal.style.display = "none";
            });

            // Close modal if clicked outside of it
            window.addEventListener('click', function(event) {
                if (event.target === infoModal) {
                    infoModal.style.display = "none";
                }
            });
        });
    </script>
</body>
</html>

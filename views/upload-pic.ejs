<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Upload and Management</title>
  <style>
    /* Your existing CSS styles */
    body {
  font-family: 'Arial', sans-serif;
  color: #333;
  background-color: #f5f5f5;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

header {
  background: #007bff;
  color: #fff;
  padding: 20px;
  text-align: center;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

h1 {
  margin: 0;
  font-size: 2rem;
  font-weight: 700;
}

.main-content {
  flex: 1;
  padding: 20px;
  max-width: 900px;
  margin: 20px auto;
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  position: relative; /* Make this relative to position the button inside it */
}

.image-container {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid #007bff;
  margin: 20px auto;
  background: #fff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.image-container img {
  width: 100%;
  height: auto;
}

button, .file-input-label {
  display: inline-block;
  background: #28a745;
  color: #fff;
  padding: 12px 24px;
  border: none;
  border-radius: 50px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  text-align: center;
  text-decoration: none;
}

button:hover, .file-input-label:hover {
  background: #218838;
  transform: scale(1.05);
}

button:active, .file-input-label:active {
  background: #1e7e34;
  transform: scale(0.95);
}

.file-input {
  display: none;
}

.confirmation-message {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: #28a745;
  color: #fff;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.confirmation-message.hide {
  opacity: 0;
  transform: translateY(20px);
}

.confirmation-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.confirmation-modal-content {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  text-align: center;
}

.confirmation-modal-content button {
  background: #28a745;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  margin: 5px;
  cursor: pointer;
}

.confirmation-modal-content button:hover {
  background: #218838;
}

.confirmation-modal-content button.cancel {
  background: #dc3545;
}

.confirmation-modal-content button.cancel:hover {
  background: #c82333;
}

.progress-container {
  margin: 20px 0;
  text-align: center;
}

.progress-container progress {
  width: 100%;
  height: 20px;
}

.navigation-buttons {
  display: flex;
  justify-content: center;
  margin: 20px 0;
}

.navigation-buttons button {
  margin: 0 10px;
}

.delete-button-container {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  width: 100%;
}

#deleteButton {
  background: #dc3545;
  color: #fff;
  padding: 12px 24px;
  border: none;
  border-radius: 50px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

#deleteButton:hover {
  background: #c82333;
  transform: scale(1.05);
}

#deleteButton:active {
  background: #bd2130;
  transform: scale(0.95);
}
  </style>
</head>
<body>
  <header>
    <h1>Upload Profile Image</h1>
  </header>

  <main class="main-content">
    <!-- Form and other content -->
    <form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data">
      <label for="fileInput" class="file-input-label">Choose Image</label>
      <input type="file" id="fileInput" name="image" class="file-input" />
      <span id="fileName" class="file-name">No file chosen</span>
      <input type="hidden" id="emailField" name="email" />
      <button type="submit">Upload</button>
    </form>

    <div class="progress-container" id="progressContainer" style="display: none;">
      <progress id="progressBar" value="0" max="100"></progress>
      <span id="progressText">0%</span>
    </div>

    <div class="confirmation-message" id="confirmationMessage" style="display: none;">
      <p>Image uploaded successfully!</p>
    </div>

    <div id="deleteConfirmationModal" class="confirmation-modal" style="display: none;">
      <div class="confirmation-modal-content">
        <p>Are you sure you want to delete this image?</p>
        <button id="confirmDeleteButton">Yes, Delete</button>
        <button id="cancelDeleteButton" class="cancel">Cancel</button>
      </div>
    </div>

    <div class="confirmation-message" id="deletionConfirmationMessage" style="display: none;">
      <p>Image deleted successfully!</p>
    </div>

    <div class="image-container" id="imageContainer">
      <img id="image" src="" alt="Uploaded Image" />
    </div>

    <div class="image-id-container" style="text-align: center; margin: 10px 0;">
      <span id="imageId">Image ID: </span>
    </div>

    <div class="navigation-buttons">
      <button id="prevButton">Previous</button>
      <button id="nextButton">Next</button>
    </div>

    <div class="delete-button-container">
      <button id="deleteButton">Delete Image</button>
    </div>
  </main>

  <script>
    let images = [];
    let currentIndex = 0;
    let imageIdToDelete = null;

    function showConfirmationMessage(messageId) {
      const messageDiv = document.getElementById(messageId);
      messageDiv.style.display = 'block';
      messageDiv.classList.remove('hide');

      setTimeout(() => {
        messageDiv.classList.add('hide');
        setTimeout(() => {
          messageDiv.style.display = 'none';
        }, 300);
      }, 3000);
    }

    function showDeleteConfirmation() {
      document.getElementById('deleteConfirmationModal').style.display = 'flex';
    }

    function hideDeleteConfirmation() {
      document.getElementById('deleteConfirmationModal').style.display = 'none';
    }

    document.getElementById('deleteButton').addEventListener('click', () => {
      console.log('Delete button clicked');
      showDeleteConfirmation();
    });

    document.getElementById('confirmDeleteButton').addEventListener('click', async () => {
      if (imageIdToDelete) {
        console.log(`Deleting image with ID: ${imageIdToDelete}`);
        try {
          const response = await fetch(`/images/id/${imageIdToDelete}`, {
            method: 'DELETE'
          });
          if (response.ok) {
            showConfirmationMessage('deletionConfirmationMessage');
            fetchAllImages();
            hideDeleteConfirmation();
          } else {
            console.error('Failed to delete image:', response.status);
          }
        } catch (error) {
          console.error('Error:', error);
        }
      } else {
        console.error('No image ID to delete');
      }
    });

    document.getElementById('cancelDeleteButton').addEventListener('click', () => {
      hideDeleteConfirmation();
    });

    document.getElementById('fileInput').addEventListener('change', function() {
      const fileName = this.files.length > 0 ? this.files[0].name : 'No file chosen';
      document.getElementById('fileName').textContent = fileName;
    });

    document.getElementById('uploadForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData();
      formData.append('image', document.querySelector('input[type="file"]').files[0]);
      formData.append('email', document.getElementById('emailField').value);

      const xhr = new XMLHttpRequest();
      xhr.open('POST', '/upload', true);

      document.getElementById('progressContainer').style.display = 'block';

      xhr.upload.onprogress = function (event) {
        if (event.lengthComputable) {
          const percentComplete = (event.loaded / event.total) * 100;
          document.getElementById('progressBar').value = percentComplete;
          document.getElementById('progressText').textContent = Math.round(percentComplete) + '%';
        }
      };

      xhr.onload = function () {
        if (xhr.status === 200) {
          const data = JSON.parse(xhr.responseText);
          if (data.filename) {
            document.getElementById('image').src = `/images/${data.filename}`;
            document.getElementById('imageId').textContent = `Image ID: ${data.fileId}`;
            fetchAllImages();
            showConfirmationMessage('confirmationMessage');
          } else {
            console.error('Upload failed:', data.error);
          }
        } else {
          console.error('Upload failed with status:', xhr.status);
        }

        setTimeout(() => {
          document.getElementById('progressContainer').style.display = 'none';
          document.getElementById('progressBar').value = 0;
          document.getElementById('progressText').textContent = '0%';
        }, 1000);
      };

      xhr.send(formData);
    });

    async function fetchAllImages() {
      try {
        const response = await fetch('/images');
        images = await response.json();
        displayImage();
      } catch (err) {
        console.error('Error fetching images:', err);
      }
    }

    function displayImage() {
      if (images.length > 0) {
        const image = images[currentIndex];
        document.getElementById('image').src = `/images/${image.filename}`;
        document.getElementById('imageId').textContent = `Image ID: ${image.id}`;
        imageIdToDelete = image.id;  // Update the ID to delete
      }
    }

    document.getElementById('prevButton').addEventListener('click', () => {
      if (images.length > 0) {
        currentIndex = (currentIndex > 0) ? currentIndex - 1 : images.length - 1;
        displayImage();
      }
    });

    document.getElementById('nextButton').addEventListener('click', () => {
      if (images.length > 0) {
        currentIndex = (currentIndex < images.length - 1) ? currentIndex + 1 : 0;
        displayImage();
      }
    });

    function getQueryParams() {
      const params = new URLSearchParams(window.location.search);
      return {
        email: params.get('email')
      };
    }

    function setEmailField() {
      const queryParams = getQueryParams();
      const emailField = document.getElementById('emailField');
      if (queryParams.email) {
        emailField.value = queryParams.email;
      } else {
        console.error('Email query parameter is missing');
      }
    }

    setEmailField();
    fetchAllImages();
  </script>
</body>
</html>
